//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16 [unused]
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32
//   int timer;                         // Offset:  128 Size:     4 [unused]
//   float3 dummy2;                     // Offset:  132 Size:    12 [unused]
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16 [unused]
//   float adjustMetalness;             // Offset:   16 Size:     4
//   float adjustSmoothness;            // Offset:   20 Size:     4
//
// }
//
// cbuffer CbShadowmap
// {
//
//   row_major float4x4 lightViewProjection;// Offset:    0 Size:    64 [unused]
//   float3 shadowColor;                // Offset:   64 Size:    12
//   float shadowBias;                  // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// albedoMapSamplerState             sampler      NA          NA             s0      1 
// shadowMapSamplerState             sampler      NA          NA             s1      1 
// albedoMap                         texture  float4          2d             t0      1 
// normalMap                         texture  float4          2d             t1      1 
// metallicSmoothnessMap             texture  float4          2d             t2      1 
// shadowMap                         texture  float4          2d             t4      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
// CbShadowmap                       cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float   xyz 
// BINORMAL                 0   xyz         4     NONE   float   xyz 
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 1   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[8], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_constantbuffer CB3[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.tangent.x; v3.y <- pin.tangent.y; v3.z <- pin.tangent.z; 
//   v4.x <- pin.binormal.x; v4.y <- pin.binormal.y; v4.z <- pin.binormal.z; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   v7.x <- pin.shadowTexcoord.x; v7.y <- pin.shadowTexcoord.y; v7.z <- pin.shadowTexcoord.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 4 "C:\Users\2210256\Documents\teamProject2-2\HLSL\Constants.hlsli"
mov r0.x, l(3.141593)  // r0.x <- PI

#line 57 "C:\Users\2210256\Documents\teamProject2-2\HLSL\PBR.hlsli"
mov r0.y, l(0.040000)  // r0.y <- Dielectric

#line 19 "C:\Users\2210256\Documents\teamProject2-2\HLSL\PBRPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v5.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, v6.xyzw  // r1.x <- albedoColor.x; r1.y <- albedoColor.y; r1.z <- albedoColor.z; r1.w <- albedoColor.w

#line 23
sample_indexable(texture2d)(float,float,float,float) r0.z, v5.xyxx, t2.yzxw, s0
mov r0.z, r0.z  // r0.z <- metallic

#line 25
sample_indexable(texture2d)(float,float,float,float) r0.w, v5.xyxx, t2.xyzw, s0
mov r0.w, r0.w  // r0.w <- smoothness

#line 30
add r0.z, r0.z, cb2[1].x
max r0.z, r0.z, l(0.000000)
min r0.z, r0.z, l(1.000000)

#line 31
add r0.w, r0.w, cb2[1].y
max r0.w, r0.w, l(0.000000)
min r0.w, r0.w, l(1.000000)

#line 34
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)  // r0.w <- roughness

#line 36
mov r2.xyz, -r1.xyzx
add r2.xyz, r2.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000)
mul r2.xyz, r0.zzzz, r2.xyzx
add r2.xyz, r1.xyzx, r2.xyzx  // r2.x <- diffuseReflectance.x; r2.y <- diffuseReflectance.y; r2.z <- diffuseReflectance.z

#line 39
mov r3.xyz, -r0.yyyy
add r1.xyz, r1.xyzx, r3.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
add r1.xyz, r0.yyyy, r1.xyzx  // r1.x <- F0.x; r1.y <- F0.y; r1.z <- F0.z

#line 41
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t1.xyzw, s0
mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r4.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z

#line 42
dp3 r0.y, v3.xyzx, v3.xyzx
rsq r0.y, r0.y
mul r4.xyz, r0.yyyy, v3.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
dp3 r0.y, v4.xyzx, v4.xyzx
rsq r0.y, r0.y
mul r5.xyz, r0.yyyy, v4.xyzx
mul r3.xyw, r3.yyyy, r5.xyxz
add r3.xyw, r3.xyxw, r4.xyxz
dp3 r0.y, v2.xyzx, v2.xyzx
rsq r0.y, r0.y
mul r4.xyz, r0.yyyy, v2.xyzx
mul r4.xyz, r3.zzzz, r4.xyzx
add r3.xyz, r3.xywx, r4.xyzx
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, r3.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 46
mov r4.xyz, -v1.xyzx
add r4.xyz, r4.xyzx, cb0[0].xyzx
dp3 r0.y, r4.xyzx, r4.xyzx
rsq r0.y, r0.y
mul r4.xyz, r0.yyyy, r4.xyzx  // r4.x <- E.x; r4.y <- E.y; r4.z <- E.z

#line 52
nop 
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r4.xyz, r4.xyzx
mov r5.xyz, cb0[6].xyzx
mov r6.xyz, cb0[7].xyzx
mov r0.w, r0.w

#line 148 "C:\Users\2210256\Documents\teamProject2-2\HLSL\PBR.hlsli"
mov r3.xyz, r3.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 149
mov r5.xyz, -r5.xyzx  // r5.x <- L.x; r5.y <- L.y; r5.z <- L.z

#line 150
mov r4.xyz, r4.xyzx  // r4.x <- V.x; r4.y <- V.y; r4.z <- V.z

#line 151
add r7.xyz, r4.xyzx, r5.xyzx
dp3 r0.y, r7.xyzx, r7.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, r7.xyzx  // r7.x <- H.x; r7.y <- H.y; r7.z <- H.z

#line 153
dp3 r0.y, r3.xyzx, r4.xyzx
max r0.y, r0.y, l(0.200000)  // r0.y <- NdotV

#line 154
dp3 r0.z, r3.xyzx, r5.xyzx
max r0.z, r0.z, l(0.200000)  // r0.z <- NdotL

#line 155
dp3 r2.w, r3.xyzx, r7.xyzx
max r2.w, r2.w, l(0.200000)  // r2.w <- NdotH

#line 156
dp3 r3.x, r4.xyzx, r7.xyzx
max r3.x, r3.x, l(0.200000)  // r3.x <- VdotH

#line 158
mul r3.yzw, r0.zzzz, r6.xxyz  // r3.y <- irradiance.x; r3.z <- irradiance.y; r3.w <- irradiance.z

#line 161
mul r3.yzw, r0.xxxx, r3.yyzw

#line 164
nop 
mov r2.xyz, r2.xyzx

#line 65
div r2.xyz, r2.xyzx, r0.xxxx  // r2.x <- <DiffuseBRDF return value>.x; r2.y <- <DiffuseBRDF return value>.y; r2.z <- <DiffuseBRDF return value>.z

#line 164
mul r2.xyz, r3.yzwy, r2.xyzx  // r2.x <- outDiffuse.x; r2.y <- outDiffuse.y; r2.z <- outDiffuse.z

#line 167
nop 
mov r0.y, r0.y
mov r0.z, r0.z
mov r2.w, r2.w
mov r3.x, r3.x
mov r1.xyz, r1.xyzx
mov r0.w, r0.w

#line 119
nop 
mov r2.w, r2.w
mov r0.w, r0.w

#line 84
mov r4.x, l(1.000000)
mul r4.y, r0.w, r0.w
mul r4.x, r4.y, r4.x  // r4.x <- a

#line 85
div r0.x, r4.x, r0.x
mov r4.y, l(1.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r4.y
mov r4.y, l(1.000000)
mul r4.x, r4.x, r4.x
mul r4.x, r4.x, r4.y
mul r2.w, r2.w, r4.x
itof r4.x, l(1)
add r2.w, r2.w, r4.x
mov r4.x, l(1.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r4.x
mul r0.x, r0.x, r2.w  // r0.x <- <CalcNormalDistributionFunction return value>

#line 119
mov r0.x, r0.x  // r0.x <- D

#line 121
nop 
mov r0.z, r0.z
mov r0.y, r0.y
mov r0.w, r0.w

#line 102
mul r0.w, r0.w, l(0.500000)  // r0.w <- r

#line 103
nop 
mov r0.z, r0.z
mov r0.w, r0.w

#line 94
div r2.w, r0.z, r0.z
itof r4.x, l(1)
mov r4.y, -r0.w
add r4.x, r4.y, r4.x
mul r2.w, r2.w, r4.x
add r2.w, r0.w, r2.w  // r2.w <- <CalcGeometryFunction return value>

#line 103
mov r2.w, r2.w  // r2.w <- shadowing

#line 104
nop 
mov r0.y, r0.y

#line 94
div r4.x, r0.y, r0.y
itof r4.y, l(1)
mov r4.z, -r0.w
add r4.y, r4.z, r4.y
mul r4.x, r4.y, r4.x
add r0.w, r0.w, r4.x  // r0.w <- <CalcGeometryFunction return value>

#line 104
mov r0.w, r0.w  // r0.w <- masking

#line 105
mul r0.w, r0.w, r2.w  // r0.w <- <CalcGeometryFunction return value>

#line 121
mov r0.w, r0.w  // r0.w <- G

#line 123
nop 
mov r1.xyz, r1.xyzx
mov r3.x, r3.x

#line 75
itof r4.xyz, l(1, 1, 1, 0)
mov r5.xyz, -r1.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
itof r2.w, l(1)
mov r3.x, -r3.x
add r2.w, r2.w, r3.x
mov r3.x, l(1.000000)
mul r3.x, r2.w, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, r3.x
mul r4.xyz, r2.wwww, r4.xyzx
add r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- <CalcFresnel return value>.x; r1.y <- <CalcFresnel return value>.y; r1.z <- <CalcFresnel return value>.z

#line 123
mov r1.xyz, r1.xyzx  // r1.x <- F.x; r1.y <- F.y; r1.z <- F.z

#line 124
mul r0.x, r0.w, r0.x
mul r1.xyz, r1.xyzx, r0.xxxx
itof r4.xyz, l(4, 4, 4, 0)
div r1.xyz, r1.xyzx, r4.xyzx
mul r0.xzw, r0.zzzz, r1.xxyz
mul r0.xyz, r0.yyyy, r0.xzwx  // r0.x <- <SpecularBRDF return value>.x; r0.y <- <SpecularBRDF return value>.y; r0.z <- <SpecularBRDF return value>.z

#line 167
mul r0.xyz, r3.yzwy, r0.xyzx  // r0.x <- outSpecular.x; r0.y <- outSpecular.y; r0.z <- outSpecular.z

#line 52 "C:\Users\2210256\Documents\teamProject2-2\HLSL\PBRPS.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- directDiffuse.x; r2.y <- directDiffuse.y; r2.z <- directDiffuse.z
mov r0.xyz, r0.xyzx  // r0.x <- directSpecular.x; r0.y <- directSpecular.y; r0.z <- directSpecular.z

#line 56
nop 
nop 
nop 
mov r1.xyz, v7.xyzx
mov r3.xyz, cb3[4].xyzx

#line 55 "C:\Users\2210256\Documents\teamProject2-2\HLSL\ShadowmapFunctions.hlsli"
resinfo_indexable(texture2d)(float,float,float,float)_uint r4.xy, l(0), t4.xyzw
mov r4.x, r4.x  // r4.x <- width
mov r4.y, r4.y  // r4.y <- height

#line 58
utof r0.w, r4.x
div r5.x, l(1.000000), r0.w  // r5.x <- texelSize.x
utof r0.w, r4.y
div r5.y, l(1.000000), r0.w  // r5.y <- texelSize.y

#line 61
itof r0.w, l(0)  // r0.w <- factor

#line 63
mov r2.w, l(-2)  // r2.w <- x
mov r3.w, r0.w  // r3.w <- factor
mov r4.x, r2.w  // r4.x <- x
loop 
  ige r4.y, l(2), r4.x
  breakc_z r4.y

#line 65
  mov r4.y, l(-2)  // r4.y <- y
  mov r4.z, r3.w  // r4.z <- factor
  mov r4.w, r4.y  // r4.w <- y
  loop 
    ige r5.z, l(2), r4.w
    breakc_z r5.z

#line 68
    itof r6.x, r4.x
    itof r6.y, r4.w
    mul r5.zw, r5.xxxy, r6.xxxy
    add r5.zw, r1.xxxy, r5.zzzw
    sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t4.yzxw, s1
    mov r5.z, r5.z  // r5.z <- depth

#line 69
    mov r5.z, -r5.z
    add r5.z, r1.z, r5.z
    ge r5.z, l(0.000050), r5.z
    movc r5.z, r5.z, l(1.000000), l(0)
    add r4.z, r4.z, r5.z

#line 70
    iadd r4.w, r4.w, l(1)
  endloop 
  mov r3.w, r4.z  // r3.w <- factor

#line 71
  iadd r4.x, r4.x, l(1)
endloop 

#line 73
itof r1.xyz, l(1, 1, 1, 0)
itof r0.w, l(25)
div r0.w, r3.w, r0.w
mov r4.xyz, -r3.xyzx
add r1.xyz, r1.xyzx, r4.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- <CalcShadowColorPCFFilter return value>.x; r1.y <- <CalcShadowColorPCFFilter return value>.y; r1.z <- <CalcShadowColorPCFFilter return value>.z

#line 56 "C:\Users\2210256\Documents\teamProject2-2\HLSL\PBRPS.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- shadow.x; r1.y <- shadow.y; r1.z <- shadow.z

#line 58
mul r2.xyz, r1.xyzx, r2.xyzx

#line 59
mul r0.xyz, r0.xyzx, r1.xyzx

#line 63
add o0.xyz, r0.xyzx, r2.xyzx
mov o0.w, r1.w
ret 
// Approximately 213 instruction slots used
